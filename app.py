import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import numpy as np

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="Diagn√≥stico Organizacional - Calzados Nihjardi",
    page_icon="üëû",
    layout="wide",
    initial_sidebar_state="expanded"
)

# CSS personalizado
st.markdown("""
<style>
    .main-header {
        background: linear-gradient(90deg, #D97706 0%, #EA580C 50%, #DC2626 100%);
        padding: 2rem;
        border-radius: 10px;
        color: white;
        text-align: center;
        margin-bottom: 2rem;
    }
    .metric-card {
        background: white;
        padding: 1rem;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        border-left: 4px solid #EA580C;
    }
    .section-header {
        background: linear-gradient(90deg, #FEF3C7 0%, #FED7AA 100%);
        padding: 1rem;
        border-radius: 8px;
        margin: 1rem 0;
    }
</style>
""", unsafe_allow_html=True)

# Datos simulados basados en el estudio
@st.cache_data
def load_data():
    # Datos de la encuesta (8 participantes)
    participantes = 8
    
    # Resultados por secci√≥n
    resultados = {
        'Ambiente Familiar': {
            'promedio': 4.2,
            'preguntas': {
                'Ambiente de trabajo': [5, 2, 1, 0],
                'Comunicaci√≥n con Don Carlos': [4, 3, 1, 0],
                'Apoyo entre compa√±eros': [3, 4, 1, 0]
            }
        },
        'Proceso Artesanal': {
            'promedio': 3.1,
            'preguntas': {
                'Organizaci√≥n del taller': [1, 3, 3, 1],
                'Planificaci√≥n diaria': [2, 2, 3, 1],
                'Orgullo del producto': [4, 3, 1, 0]
            }
        },
        'Cambio y Mejora': {
            'promedio': 3.4,
            'preguntas': {
                'Actitud hacia cambios': [2, 3, 2, 1],
                'Reacci√≥n a nuevas formas': [1, 4, 2, 1],
                'Ideas de mejora': [2, 3, 2, 1]
            }
        },
        'Identidad Nihjardi': {
            'promedio': 4.5,
            'preguntas': {
                'Lo que m√°s valoro': [4, 2, 1, 1],
                'Nunca cambiar': [3, 3, 1, 1],
                'Futuro de la empresa': [3, 4, 1, 0]
            }
        }
    }
    
    return participantes, resultados

def main():
    # Header principal
    st.markdown("""
    <div class="main-header">
        <h1>üëû Calzados "Nihjardi"</h1>
        <h2>Diagn√≥stico Organizacional 2024</h2>
        <p>An√°lisis integral del proceso de cambio organizacional</p>
    </div>
    """, unsafe_allow_html=True)
    
    # Sidebar para navegaci√≥n
    st.sidebar.title("üß≠ Navegaci√≥n")
    page = st.sidebar.selectbox(
        "Selecciona una secci√≥n:",
        ["üìä Dashboard Ejecutivo", "üìã Encuesta Interactiva", "üìà An√°lisis Detallado", "üí° Recomendaciones"]
    )
    
    participantes, resultados = load_data()
    
    if page == "üìä Dashboard Ejecutivo":
        show_dashboard(participantes, resultados)
    elif page == "üìã Encuesta Interactiva":
        show_survey()
    elif page == "üìà An√°lisis Detallado":
        show_detailed_analysis(resultados)
    elif page == "üí° Recomendaciones":
        show_recommendations()

def show_dashboard(participantes, resultados):
    st.header("üìä Dashboard Ejecutivo")
    
    # M√©tricas principales
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric(
            label="üë• Participantes",
            value=f"{participantes}/8",
            delta="100% participaci√≥n"
        )
    
    with col2:
        st.metric(
            label="ü§ù Cohesi√≥n del Equipo",
            value="4.2/5",
            delta="84% - Fortaleza"
        )
    
    with col3:
        st.metric(
            label="üîÑ Disposici√≥n al Cambio",
            value="3.4/5",
            delta="68% - Oportunidad"
        )
    
    with col4:
        st.metric(
            label="‚≠ê Identidad Empresarial",
            value="4.5/5",
            delta="90% - Excelente"
        )
    
    # Gr√°fico de radar
    st.subheader("üéØ Perfil Organizacional")
    
    categories = ['Ambiente Familiar', 'Calidad Artesanal', 'Organizaci√≥n', 
                 'Comunicaci√≥n', 'Disposici√≥n al Cambio', 'Identidad Empresarial']
    values = [84, 90, 62, 78, 68, 90]
    
    fig_radar = go.Figure()
    fig_radar.add_trace(go.Scatterpolar(
        r=values,
        theta=categories,
        fill='toself',
        name='Calzados Nihjardi',
        line_color='#EA580C',
        fillcolor='rgba(234, 88, 12, 0.3)'
    ))
    
    fig_radar.update_layout(
        polar=dict(
            radialaxis=dict(
                visible=True,
                range=[0, 100]
            )),
        showlegend=True,
        height=500
    )
    
    st.plotly_chart(fig_radar, use_container_width=True)
    
    # Resumen por secciones
    st.subheader("üìã Resumen por Secciones")
    
    col1, col2 = st.columns(2)
    
    with col1:
        # Gr√°fico de barras con promedios
        secciones = list(resultados.keys())
        promedios = [resultados[s]['promedio'] for s in secciones]
        
        fig_bar = px.bar(
            x=secciones,
            y=promedios,
            title="Promedio por Secci√≥n",
            color=promedios,
            color_continuous_scale=['#FEE2E2', '#DC2626'],
            text=[f"{p:.1f}" for p in promedios]
        )
        fig_bar.update_traces(textposition='outside')
        fig_bar.update_layout(showlegend=False, height=400)
        st.plotly_chart(fig_bar, use_container_width=True)
    
    with col2:
        # Proyecci√≥n del cambio
        meses = ['Actual', 'Mes 1', 'Mes 2', 'Mes 3', 'Mes 6']
        resistencia = [65, 55, 45, 35, 25]
        aceptacion = [35, 45, 55, 65, 75]
        
        fig_line = go.Figure()
        fig_line.add_trace(go.Scatter(
            x=meses, y=resistencia,
            mode='lines+markers',
            name='Resistencia al Cambio',
            line=dict(color='#DC2626', width=3)
        ))
        fig_line.add_trace(go.Scatter(
            x=meses, y=aceptacion,
            mode='lines+markers',
            name='Aceptaci√≥n del Cambio',
            line=dict(color='#059669', width=3)
        ))
        fig_line.update_layout(
            title="Proyecci√≥n del Cambio",
            yaxis_title="Porcentaje (%)",
            height=400
        )
        st.plotly_chart(fig_line, use_container_width=True)

def show_survey():
    st.header("üìã Encuesta Interactiva")
    st.info("Esta es una simulaci√≥n de la encuesta aplicada a los 8 participantes de Calzados Nihjardi")
    
    # Secciones de la encuesta
    secciones = {
        "ü§ù Ambiente Familiar": {
            "preguntas": [
                "¬øC√≥mo sientes el ambiente familiar en Calzados Nihjardi?",
                "¬øC√≥mo describes la comunicaci√≥n con Don Carlos?",
                "¬øC√≥mo reaccionan tus compa√±eros cuando tienes dificultades?"
            ],
            "opciones": [
                ["Como en casa, somos familia", "Buen ambiente con respeto", "Agradable con tensiones", "Podr√≠a mejorar"],
                ["Excelente, siempre escucha", "Buena disponibilidad", "Solo temas de trabajo", "Dif√≠cil acercarse"],
                ["Siempre me ayudan", "Me ayudan si pido", "A veces ayudan", "Cada uno en lo suyo"]
            ]
        },
        "üî® Proceso Artesanal": {
            "preguntas": [
                "¬øC√≥mo est√° organizado nuestro taller?",
                "¬øC√≥mo te sientes con la planificaci√≥n diaria?",
                "¬øQu√© tan orgulloso te sientes del calzado que producimos?"
            ],
            "opciones": [
                ["Muy bien organizado", "Bien, puede mejorar", "Regular, perdemos tiempo", "Desorganizado"],
                ["Me gusta la flexibilidad", "Est√° bien", "M√°s claridad", "Mejor planificaci√≥n"],
                ["Muy orgulloso", "Orgulloso", "Moderadamente", "Poco orgulloso"]
            ]
        }
    }
    
    # Mostrar encuesta interactiva
    for seccion, contenido in secciones.items():
        with st.expander(seccion, expanded=True):
            for i, pregunta in enumerate(contenido["preguntas"]):
                st.write(f"**{pregunta}**")
                respuesta = st.radio(
                    "Selecciona tu respuesta:",
                    contenido["opciones"][i],
                    key=f"{seccion}_{i}",
                    horizontal=True
                )
                st.write("---")
    
    if st.button("üéØ Ver Resultados Simulados", type="primary"):
        st.success("¬°Gracias por completar la encuesta! Los resultados se muestran en el Dashboard Ejecutivo.")

def show_detailed_analysis(resultados):
    st.header("üìà An√°lisis Detallado por Secci√≥n")
    
    for seccion, datos in resultados.items():
        st.subheader(f"üìä {seccion}")
        
        col1, col2 = st.columns([2, 1])
        
        with col1:
            # Crear gr√°ficos para cada pregunta
            for pregunta, respuestas in datos['preguntas'].items():
                opciones = ["Muy Positivo", "Positivo", "Regular", "Negativo"]
                
                fig = px.bar(
                    x=opciones,
                    y=respuestas,
                    title=f"{pregunta}",
                    color=respuestas,
                    color_continuous_scale='RdYlGn_r'
                )
                fig.update_layout(height=300, showlegend=False)
                st.plotly_chart(fig, use_container_width=True)
        
        with col2:
            st.metric(
                label="Promedio Secci√≥n",
                value=f"{datos['promedio']}/5",
                delta=f"{(datos['promedio']/5)*100:.0f}%"
            )
            
            # Interpretaci√≥n
            if datos['promedio'] >= 4.0:
                st.success("üü¢ Fortaleza identificada")
            elif datos['promedio'] >= 3.5:
                st.info("üü° √Årea con potencial")
            else:
                st.warning("üü† Requiere atenci√≥n")
        
        st.write("---")

def show_recommendations():
    st.header("üí° Recomendaciones Estrat√©gicas")
    
    # Conclusiones principales
    st.subheader("üéØ Conclusiones Principales")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.success("""
        **üü¢ Fortalezas**
        - Ambiente familiar excepcional (87.5%)
        - Orgullo artesanal alto (87.5%)
        - Identidad empresarial s√≥lida (90%)
        - Comunicaci√≥n abierta con liderazgo
        """)
    
    with col2:
        st.warning("""
        **üü° Oportunidades**
        - Organizaci√≥n del taller (50% necesita mejoras)
        - Planificaci√≥n diaria (50% requiere claridad)
        - Disposici√≥n moderada al cambio (68%)
        """)
    
    with col3:
        st.info("""
        **üîµ Recomendaciones**
        - Implementar cambios graduales
        - Mantener comunicaci√≥n constante
        - Preservar identidad artesanal
        - Capacitaci√≥n en organizaci√≥n
        """)
    
    # Plan de implementaci√≥n
    st.subheader("üìÖ Plan de Implementaci√≥n Sugerido")
    
    fases = {
        "Fase 1 (Mes 1-2)": {
            "objetivo": "Preparaci√≥n y sensibilizaci√≥n",
            "acciones": [
                "Reuniones de sensibilizaci√≥n sobre la necesidad del cambio",
                "Formaci√≥n del equipo gu√≠a (propietario + 2 colaboradores clave)",
                "Comunicaci√≥n clara de la visi√≥n del cambio"
            ]
        },
        "Fase 2 (Mes 2-4)": {
            "objetivo": "Implementaci√≥n gradual",
            "acciones": [
                "Reorganizaci√≥n f√≠sica del taller",
                "Implementaci√≥n de planificaci√≥n diaria simple",
                "Capacitaci√≥n en organizaci√≥n del espacio"
            ]
        },
        "Fase 3 (Mes 4-6)": {
            "objetivo": "Consolidaci√≥n",
            "acciones": [
                "Rutinas de mantenimiento preventivo",
                "Sistema b√°sico de control de pedidos",
                "Evaluaci√≥n y ajustes del proceso"
            ]
        }
    }
    
    for fase, contenido in fases.items():
        with st.expander(fase, expanded=True):
            st.write(f"**Objetivo:** {contenido['objetivo']}")
            st.write("**Acciones:**")
            for accion in contenido['acciones']:
                st.write(f"‚Ä¢ {accion}")
    
    # M√©tricas de √©xito
    st.subheader("üìä M√©tricas de √âxito Proyectadas")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric(
            label="Probabilidad de √âxito",
            value="78%",
            delta="Alto potencial"
        )
    
    with col2:
        st.metric(
            label="Tiempo Estimado",
            value="4-6 meses",
            delta="Implementaci√≥n gradual"
        )
    
    with col3:
        st.metric(
            label="Riesgo General",
            value="Bajo",
            delta="Equipo cohesionado"
        )

if __name__ == "__main__":
    main()
